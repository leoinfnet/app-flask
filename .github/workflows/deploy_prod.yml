name: Deploy pra prod

on: 
  push:
    branchs:
      - main
jobs:
  upload_to_homolog:
    runs-on: self-hosted
    steps: 
      - name: "Iniciando JOB"
        run: |
          echo "Iniciando JOB em $(date)"
      - name: "Checkout codigo"
        uses: actions/checkout@v4
      - name: "Configurar Ambiente"
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: "Instalar Dependencias"
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Docker Login
        run: |
          echo ${{ secrets.DOCKER_TOKEN }} | docker login --username ${{ secrets.DOCKERHUB_USER }} --password-stdin
      - name: Docker Build
        run: docker build . -t leogloriainfnet/flask-acme:latest
      - name: Docker Push
        run: docker push leogloriainfnet/flask-acme:latest
      - name: Deploy on K8s
        run: |
          kubectl rollout restart deploy flask-acme -n acme 
      - name: Verify Deploy
        run: |
          kubectl rollout status deploy flask-acme -n acme
      - name: "Executar Testes"
        continue-on-error: false
        run: |
          cd app/
          python -m unittest testeapp_homolog.py
      - name: "Notificar Falha"
        if: failure()
        run: | 
         curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"username": "GitHub Actions", "content": "ðŸš¨ **Os testes falharam!** Verifique os logs no GitHub Actions."}' \
               ${{ secrets.DISCORD_WEB_HOOK }}
      - name: "Notificar Sucesso"
        run: | 
         curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"username": "GitHub Actions", "content": "ðŸš¨ **Os testes Funcionaram!** Verifique os logs no GitHub Actions."}' \
               ${{ secrets.DISCORD_WEB_HOOK }}